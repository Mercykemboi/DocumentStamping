{"ast":null,"code":"\n// import React, { useState } from \"react\";\n// import API from \"../api\";\n\n// const Register = () => {\n//   const [formData, setFormData] = useState({ username: \"\", password: \"\" });\n//   const [message, setMessage] = useState(\"\");\n\n//   const handleChange = (e) => {\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await API.post(\"/register/\", formData);\n//       if (response.status === 201) {\n//         setMessage(\"Registration successful! Welcome, \" + formData.username);\n//       } else {\n//         setMessage(\"Unexpected response from the server.\");\n//       }\n//     } catch (error) {\n//       setMessage(\"Error: \" + (error.response?.data?.detail || \"Registration failed.\"));\n//     }\n//   };\n\n//   return (\n//     <div style={styles.container}>\n//       <div style={styles.card}>\n//         <h2 style={styles.title}>Register</h2>\n//         <form onSubmit={handleSubmit} style={styles.form}>\n//           <input\n//             type=\"text\"\n//             name=\"username\"\n//             placeholder=\"Username\"\n//             value={formData.username}\n//             onChange={handleChange}\n//             required\n//             style={styles.input}\n//           />\n//           <input\n//             type=\"password\"\n//             name=\"password\"\n//             placeholder=\"Password\"\n//             value={formData.password}\n//             onChange={handleChange}\n//             required\n//             style={styles.input}\n//           />\n//           <button type=\"submit\" style={styles.button}>Register</button>\n//         </form>\n//         {message && <p style={styles.message}>{message}</p>}\n//       </div>\n//     </div>\n//   );\n// };\n\n// const styles = {\n//   container: {\n//     display: \"flex\",\n//     justifyContent: \"center\",\n//     alignItems: \"center\",\n//     height: \"100vh\",\n//     backgroundColor: \"#f8f9fa\",\n//   },\n//   card: {\n//     backgroundColor: \"#fff\",\n//     borderRadius: \"8px\",\n//     padding: \"2rem\",\n//     boxShadow: \"0 4px 6px rgba(0, 0, 0, 0.1)\",\n//     width: \"100%\",\n//     maxWidth: \"400px\",\n//     textAlign: \"center\",\n//   },\n//   title: {\n//     marginBottom: \"1.5rem\",\n//     fontSize: \"1.8rem\",\n//     color: \"#333\",\n//   },\n//   form: {\n//     display: \"flex\",\n//     flexDirection: \"column\",\n//     gap: \"1rem\",\n//   },\n//   input: {\n//     padding: \"0.8rem\",\n//     fontSize: \"1rem\",\n//     border: \"1px solid #ced4da\",\n//     borderRadius: \"4px\",\n//   },\n//   button: {\n//     padding: \"0.8rem\",\n//     fontSize: \"1rem\",\n//     color: \"#fff\",\n//     backgroundColor: \"#007bff\",\n//     border: \"none\",\n//     borderRadius: \"4px\",\n//     cursor: \"pointer\",\n//     transition: \"background-color 0.3s\",\n//   },\n//   buttonHover: {\n//     backgroundColor: \"#0056b3\",\n//   },\n//   message: {\n//     marginTop: \"1rem\",\n//     fontSize: \"1rem\",\n//     color: \"#28a745\",\n//   },\n// };\n\n// export default Register;","map":{"version":3,"names":[],"sources":["D:/Chakan/DocumentStamping/DocumentStamping/frontend/src/pages/Register.js"],"sourcesContent":["\r\n// import React, { useState } from \"react\";\r\n// import API from \"../api\";\r\n\r\n// const Register = () => {\r\n//   const [formData, setFormData] = useState({ username: \"\", password: \"\" });\r\n//   const [message, setMessage] = useState(\"\");\r\n\r\n//   const handleChange = (e) => {\r\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const response = await API.post(\"/register/\", formData);\r\n//       if (response.status === 201) {\r\n//         setMessage(\"Registration successful! Welcome, \" + formData.username);\r\n//       } else {\r\n//         setMessage(\"Unexpected response from the server.\");\r\n//       }\r\n//     } catch (error) {\r\n//       setMessage(\"Error: \" + (error.response?.data?.detail || \"Registration failed.\"));\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div style={styles.container}>\r\n//       <div style={styles.card}>\r\n//         <h2 style={styles.title}>Register</h2>\r\n//         <form onSubmit={handleSubmit} style={styles.form}>\r\n//           <input\r\n//             type=\"text\"\r\n//             name=\"username\"\r\n//             placeholder=\"Username\"\r\n//             value={formData.username}\r\n//             onChange={handleChange}\r\n//             required\r\n//             style={styles.input}\r\n//           />\r\n//           <input\r\n//             type=\"password\"\r\n//             name=\"password\"\r\n//             placeholder=\"Password\"\r\n//             value={formData.password}\r\n//             onChange={handleChange}\r\n//             required\r\n//             style={styles.input}\r\n//           />\r\n//           <button type=\"submit\" style={styles.button}>Register</button>\r\n//         </form>\r\n//         {message && <p style={styles.message}>{message}</p>}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// const styles = {\r\n//   container: {\r\n//     display: \"flex\",\r\n//     justifyContent: \"center\",\r\n//     alignItems: \"center\",\r\n//     height: \"100vh\",\r\n//     backgroundColor: \"#f8f9fa\",\r\n//   },\r\n//   card: {\r\n//     backgroundColor: \"#fff\",\r\n//     borderRadius: \"8px\",\r\n//     padding: \"2rem\",\r\n//     boxShadow: \"0 4px 6px rgba(0, 0, 0, 0.1)\",\r\n//     width: \"100%\",\r\n//     maxWidth: \"400px\",\r\n//     textAlign: \"center\",\r\n//   },\r\n//   title: {\r\n//     marginBottom: \"1.5rem\",\r\n//     fontSize: \"1.8rem\",\r\n//     color: \"#333\",\r\n//   },\r\n//   form: {\r\n//     display: \"flex\",\r\n//     flexDirection: \"column\",\r\n//     gap: \"1rem\",\r\n//   },\r\n//   input: {\r\n//     padding: \"0.8rem\",\r\n//     fontSize: \"1rem\",\r\n//     border: \"1px solid #ced4da\",\r\n//     borderRadius: \"4px\",\r\n//   },\r\n//   button: {\r\n//     padding: \"0.8rem\",\r\n//     fontSize: \"1rem\",\r\n//     color: \"#fff\",\r\n//     backgroundColor: \"#007bff\",\r\n//     border: \"none\",\r\n//     borderRadius: \"4px\",\r\n//     cursor: \"pointer\",\r\n//     transition: \"background-color 0.3s\",\r\n//   },\r\n//   buttonHover: {\r\n//     backgroundColor: \"#0056b3\",\r\n//   },\r\n//   message: {\r\n//     marginTop: \"1rem\",\r\n//     fontSize: \"1rem\",\r\n//     color: \"#28a745\",\r\n//   },\r\n// };\r\n\r\n// export default Register;\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}