{"ast":null,"code":"// // import React from \"react\";\n\n// // function Login() {\n// //   return (\n// //     <div style={styles.container}>\n// //       <h2>Login</h2>\n// //       <form>\n// //         <input type=\"text\" placeholder=\"Username\" style={styles.input} />\n// //         <input type=\"password\" placeholder=\"Password\" style={styles.input} />\n// //         <button type=\"submit\" style={styles.button}>Login</button>\n// //       </form>\n// //     </div>\n// //   );\n// // }\n\n// // const styles = {\n// //   container: { textAlign: \"center\", marginTop: \"2rem\" },\n// //   input: { display: \"block\", margin: \"1rem auto\", padding: \"0.5rem\", width: \"80%\" },\n// //   button: {\n// //     padding: \"0.5rem 1rem\",\n// //     backgroundColor: \"#007BFF\",\n// //     color: \"#FFF\",\n// //     border: \"none\",\n// //     borderRadius: \"4px\",\n// //     cursor: \"pointer\",\n// //   },\n// // };\n\n// // export default Login;\n// import React, { useState } from \"react\";\n// import API from \"../api\"; // Your API instance with base URL\n\n// function Login() {\n//   const [formData, setFormData] = useState({ username: \"\", password: \"\" });\n//   const [message, setMessage] = useState(\"\"); // To display messages\n//   const [loading, setLoading] = useState(false); // To handle loading state\n\n//   const handleChange = (e) => {\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setLoading(true);\n//     try {\n//       const response = await API.post(\"/login/\", formData);\n//       if (response.status === 200) {\n//         localStorage.setItem(\"access_token\", response.data.access_token); // Store token\n//         setMessage(\"Login successful!\");\n//         // Optionally, redirect user to a dashboard or homepage\n//         window.location.href = \"/dashboard\"; // Change to your route\n//       } else {\n//         setMessage(\"Invalid credentials.\");\n//       }\n//     } catch (error) {\n//       setMessage(\"Error: \" + (error.response?.data?.detail || \"Login failed.\"));\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div style={styles.container}>\n//       <h2>Login</h2>\n//       <form onSubmit={handleSubmit} style={styles.form}>\n//         <input\n//           type=\"text\"\n//           name=\"username\"\n//           placeholder=\"Username\"\n//           value={formData.username}\n//           onChange={handleChange}\n//           style={styles.input}\n//           required\n//         />\n//         <input\n//           type=\"password\"\n//           name=\"password\"\n//           placeholder=\"Password\"\n//           value={formData.password}\n//           onChange={handleChange}\n//           style={styles.input}\n//           required\n//         />\n//         <button type=\"submit\" style={styles.button} disabled={loading}>\n//           {loading ? \"Logging in...\" : \"Login\"}\n//         </button>\n//       </form>\n//       {message && <p style={styles.message}>{message}</p>}\n//     </div>\n//   );\n// }\n\n// const styles = {\n//   container: {\n//     textAlign: \"center\",\n//     marginTop: \"2rem\",\n//     padding: \"2rem\",\n//     backgroundColor: \"#f8f9fa\",\n//     borderRadius: \"8px\",\n//     width: \"100%\",\n//     maxWidth: \"400px\",\n//     boxShadow: \"0 4px 6px rgba(0, 0, 0, 0.1)\",\n//   },\n//   form: {\n//     display: \"flex\",\n//     flexDirection: \"column\",\n//     gap: \"1rem\",\n//   },\n//   input: {\n//     display: \"block\",\n//     margin: \"1rem auto\",\n//     padding: \"0.8rem\",\n//     width: \"80%\",\n//     borderRadius: \"4px\",\n//     border: \"1px solid #ced4da\",\n//   },\n//   button: {\n//     padding: \"0.8rem\",\n//     fontSize: \"1rem\",\n//     backgroundColor: \"#007BFF\",\n//     color: \"#FFF\",\n//     border: \"none\",\n//     borderRadius: \"4px\",\n//     cursor: \"pointer\",\n//     transition: \"background-color 0.3s\",\n//   },\n//   message: {\n//     marginTop: \"1rem\",\n//     fontSize: \"1rem\",\n//     color: \"#28a745\", // Green for success\n//   },\n// };\n\n// export default Login;","map":{"version":3,"names":[],"sources":["D:/Chakan/DocumentStamping/DocumentStamping/frontend/src/pages/Login.js"],"sourcesContent":["// // import React from \"react\";\r\n\r\n// // function Login() {\r\n// //   return (\r\n// //     <div style={styles.container}>\r\n// //       <h2>Login</h2>\r\n// //       <form>\r\n// //         <input type=\"text\" placeholder=\"Username\" style={styles.input} />\r\n// //         <input type=\"password\" placeholder=\"Password\" style={styles.input} />\r\n// //         <button type=\"submit\" style={styles.button}>Login</button>\r\n// //       </form>\r\n// //     </div>\r\n// //   );\r\n// // }\r\n\r\n// // const styles = {\r\n// //   container: { textAlign: \"center\", marginTop: \"2rem\" },\r\n// //   input: { display: \"block\", margin: \"1rem auto\", padding: \"0.5rem\", width: \"80%\" },\r\n// //   button: {\r\n// //     padding: \"0.5rem 1rem\",\r\n// //     backgroundColor: \"#007BFF\",\r\n// //     color: \"#FFF\",\r\n// //     border: \"none\",\r\n// //     borderRadius: \"4px\",\r\n// //     cursor: \"pointer\",\r\n// //   },\r\n// // };\r\n\r\n// // export default Login;\r\n// import React, { useState } from \"react\";\r\n// import API from \"../api\"; // Your API instance with base URL\r\n\r\n// function Login() {\r\n//   const [formData, setFormData] = useState({ username: \"\", password: \"\" });\r\n//   const [message, setMessage] = useState(\"\"); // To display messages\r\n//   const [loading, setLoading] = useState(false); // To handle loading state\r\n\r\n//   const handleChange = (e) => {\r\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     setLoading(true);\r\n//     try {\r\n//       const response = await API.post(\"/login/\", formData);\r\n//       if (response.status === 200) {\r\n//         localStorage.setItem(\"access_token\", response.data.access_token); // Store token\r\n//         setMessage(\"Login successful!\");\r\n//         // Optionally, redirect user to a dashboard or homepage\r\n//         window.location.href = \"/dashboard\"; // Change to your route\r\n//       } else {\r\n//         setMessage(\"Invalid credentials.\");\r\n//       }\r\n//     } catch (error) {\r\n//       setMessage(\"Error: \" + (error.response?.data?.detail || \"Login failed.\"));\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div style={styles.container}>\r\n//       <h2>Login</h2>\r\n//       <form onSubmit={handleSubmit} style={styles.form}>\r\n//         <input\r\n//           type=\"text\"\r\n//           name=\"username\"\r\n//           placeholder=\"Username\"\r\n//           value={formData.username}\r\n//           onChange={handleChange}\r\n//           style={styles.input}\r\n//           required\r\n//         />\r\n//         <input\r\n//           type=\"password\"\r\n//           name=\"password\"\r\n//           placeholder=\"Password\"\r\n//           value={formData.password}\r\n//           onChange={handleChange}\r\n//           style={styles.input}\r\n//           required\r\n//         />\r\n//         <button type=\"submit\" style={styles.button} disabled={loading}>\r\n//           {loading ? \"Logging in...\" : \"Login\"}\r\n//         </button>\r\n//       </form>\r\n//       {message && <p style={styles.message}>{message}</p>}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// const styles = {\r\n//   container: {\r\n//     textAlign: \"center\",\r\n//     marginTop: \"2rem\",\r\n//     padding: \"2rem\",\r\n//     backgroundColor: \"#f8f9fa\",\r\n//     borderRadius: \"8px\",\r\n//     width: \"100%\",\r\n//     maxWidth: \"400px\",\r\n//     boxShadow: \"0 4px 6px rgba(0, 0, 0, 0.1)\",\r\n//   },\r\n//   form: {\r\n//     display: \"flex\",\r\n//     flexDirection: \"column\",\r\n//     gap: \"1rem\",\r\n//   },\r\n//   input: {\r\n//     display: \"block\",\r\n//     margin: \"1rem auto\",\r\n//     padding: \"0.8rem\",\r\n//     width: \"80%\",\r\n//     borderRadius: \"4px\",\r\n//     border: \"1px solid #ced4da\",\r\n//   },\r\n//   button: {\r\n//     padding: \"0.8rem\",\r\n//     fontSize: \"1rem\",\r\n//     backgroundColor: \"#007BFF\",\r\n//     color: \"#FFF\",\r\n//     border: \"none\",\r\n//     borderRadius: \"4px\",\r\n//     cursor: \"pointer\",\r\n//     transition: \"background-color 0.3s\",\r\n//   },\r\n//   message: {\r\n//     marginTop: \"1rem\",\r\n//     fontSize: \"1rem\",\r\n//     color: \"#28a745\", // Green for success\r\n//   },\r\n// };\r\n\r\n// export default Login;\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}